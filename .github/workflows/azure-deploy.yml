name: Azure CI/CD - Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  AZURE_RESOURCE_GROUP: rg-sme-analytics-prod
  AZURE_CONTAINER_REGISTRY: acrk2mc444oapoak
  AZURE_LOCATION: eastus
  
  # Container App names
  BACKEND_APP: backend
  ML_SERVICES_APP: ml-services
  FRONTEND_APP: frontend
  
  # Image names
  BACKEND_IMAGE: backend
  ML_SERVICES_IMAGE: ml-services
  FRONTEND_IMAGE: frontend

jobs:
  # Job 1: Build and Test Backend
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run backend tests
        run: |
          cd backend
          ./mvnw clean test

      - name: Build backend with Maven
        run: |
          cd backend
          ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:buildcache,mode=max

  # Job 2: Build and Test ML Services
  build-ml-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free Disk Space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker system prune -af
          echo "Disk space after cleanup:"
          df -h

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd ml-models
          pip install -r requirements.txt

      - name: Run ML services tests
        run: |
          cd ml-models
          python -m pytest tests/ -v

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push ML services Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ml-models
          file: ./ml-models/Dockerfile
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Cleanup after ML build
        if: always()
        run: |
          docker system prune -f
          echo "Disk space after ML build:"
          df -h

  # Job 3: Build and Test Frontend
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:buildcache,mode=max

  # Job 4: Deploy to Azure Container Apps
  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: [build-backend, build-ml-services, build-frontend]
    environment:
      name: production
      url: https://frontend.prouddesert-fa0ab96d.eastus.azurecontainerapps.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Backend Container App
        run: |
          az containerapp update \
            --name ${{ env.BACKEND_APP }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      - name: Deploy ML Services Container App
        run: |
          az containerapp update \
            --name ${{ env.ML_SERVICES_APP }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:${{ github.sha }}

      - name: Deploy Frontend Container App
        run: |
          az containerapp update \
            --name ${{ env.FRONTEND_APP }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

      - name: Verify Deployment - Backend
        run: |
          echo "Waiting for backend to be ready..."
          sleep 30
          curl -f https://backend.prouddesert-fa0ab96d.eastus.azurecontainerapps.io/api/v1/data/health || exit 1
          echo "‚úÖ Backend is healthy"

      - name: Verify Deployment - ML Services
        run: |
          echo "Waiting for ML services to be ready..."
          sleep 30
          curl -f https://ml-services.prouddesert-fa0ab96d.eastus.azurecontainerapps.io/health || exit 1
          echo "‚úÖ ML Services is healthy"

      - name: Verify Deployment - Frontend
        run: |
          echo "Waiting for frontend to be ready..."
          sleep 30
          curl -f https://frontend.prouddesert-fa0ab96d.eastus.azurecontainerapps.io || exit 1
          echo "‚úÖ Frontend is healthy"

      - name: Deployment Summary
        run: |
          echo "üéâ Deployment Complete!"
          echo ""
          echo "üì¶ Deployed Images:"
          echo "  - Backend: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE }}:${{ github.sha }}"
          echo "  - ML Services: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.ML_SERVICES_IMAGE }}:${{ github.sha }}"
          echo "  - Frontend: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}"
          echo ""
          echo "üåê Application URLs:"
          echo "  - Frontend: https://frontend.prouddesert-fa0ab96d.eastus.azurecontainerapps.io"
          echo "  - Backend: https://backend.prouddesert-fa0ab96d.eastus.azurecontainerapps.io"
          echo "  - ML Services: https://ml-services.prouddesert-fa0ab96d.eastus.azurecontainerapps.io"

      - name: Azure Logout
        run: az logout
        if: always()
